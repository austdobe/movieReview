{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.style.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","GlobalStyles.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","SearchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","console","log","API","movies","prev","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","GlobalStyle","createGlobalStyle","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ab329a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.35f4d399.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.e7029961.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div `\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: var(--maxWidth)\r\n    padding: 20px 0;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img `\r\n    width: 200px;\r\n\r\n    @media screen and (max-width: 500px){\r\n        width: 150px;\r\n    }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img `\r\n    width: 100px;\r\n    @media screen and (max-width: 500px){\r\n        width: 80px;\r\n    }\r\n`;\r\n","import React from 'react';\r\n\r\nimport RMDBLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo  from '../../images/tmdb_logo.svg';\r\n\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './header.styles';\r\n\r\nconst Header = () =>(\r\n    <Wrapper>\r\n        <Content>\r\n            <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\r\n            <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo'/>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Header;","// Configuration for TMDB API\r\n// Read more about the API here: https://developers.themoviedb.org/\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\r\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\r\n// For login and voting\r\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\r\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\r\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\r\n\r\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\r\n// Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w780';\r\n\r\nexport {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div `\r\n    background: linear-gradient(\r\n        to bottom, rgba(0, 0, 0, 0)\r\n        41%, rgba( 0, 0, 0, 0.65)\r\n        100%\r\n    ), \r\n    url(${({image}) => image}), var(--darkGrey);\r\n    Background-size: 100%, cover;\r\n    background-position: center;\r\n    height: 600px;\r\n    position: relative;\r\n    animation: animateHeroImage 1s'\r\n\r\n    @keyframes animateHeroImage{\r\n        from{\r\n            opacity: 0;\r\n        } to{\r\n            opacity: 1\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div `\r\n    padding: 20px;\r\n    max-width: var(--maxWidth)\r\n    margin: 0 auto;\r\n\r\n`;\r\n\r\nexport const Text = styled.div `\r\n    z-index: 100;\r\n    max-width: 700px;\r\n    position: absolute;\r\n    bottom: 40px;\r\n    margin-right: 20px;\r\n    min-height: 100px;\r\n    color: var(--white);\r\n    h1{\r\n        font-size: var(--fontSuperBig);\r\n\r\n        @media screen and (max-width: 720px){\r\n            font-size: var(--fontBig)\r\n\r\n        }\r\n    \r\n    }\r\n    p{\r\n        font-size: var(--fontMed)\r\n\r\n        @media screen and (max-width: 720px){\r\n            font-size: var(--fontSmall)\r\n        }\r\n    }\r\n    @media screen and (max-width: 720px){\r\n        max-width: 100%\r\n    }\r\n\r\n`;","import React from \"react\";\r\n//style\r\nimport { Wrapper, Content, Text } from \"./HeroImage.style\";\r\n\r\nconst HeroImage = ({ image, title, text }) =>(\r\n    <Wrapper image={image}>\r\n        <Content>\r\n            <Text>\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n)\r\n\r\nexport default HeroImage;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div `\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n\r\n    h1{\r\n        color: var(--medGrey);\r\n        \r\n        @media screen and (max-width: 768px){\r\n            font-size: var(--fontBig)\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div `\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    grid-gap: 2rem;\r\n`; ","import React from 'react';\r\n\r\nimport { Wrapper, Content } from './Grid.styles';\r\n\r\nconst Grid = ({ header, children }) => (\r\n\r\n    <Wrapper>\r\n        <h1>{header}</h1>\r\n        <Content>{children}</Content>\r\n    </Wrapper>\r\n\r\n)\r\n\r\nexport default Grid;","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img `\r\n    width: 100%;\r\n    max-width: 720px;\r\n    transition: all 0.3s;\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n    animation: animateThumb 0.5s;\r\n\r\n    :hover{\r\n        opacity: .8;\r\n    }\r\n\r\n    @keyframes animateThumb {\r\n        from{\r\n            opacity: 0;\r\n\r\n        }\r\n        to{\r\n            opacity: 1;\r\n\r\n        }\r\n    }\r\n`;","import React from 'react';\r\n//styles\r\nimport { Image } from './Thumb.styles';\r\n\r\nconst Thumb = ({ image, movieId, clickable })=>(\r\n    <div>\r\n        <Image src={image} alt='movie-thumb'/>\r\n    </div>\r\n)\r\n\r\nexport default Thumb","import React from 'react'\r\n\r\nimport { Spinner } from './Spinner.styles'\r\n\r\nexport default Spinner","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div `\r\n    border: 5px solid var(--lightGrey);\r\n    border-top: 5px solid var(--medGrey);\r\n    border-radius: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n    animation: spin 0.8s linear infinite;\r\n    margin: 20px auto;\r\n\r\n    @keyframes spin {\r\n        0%{\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/search-icon.bb4c697f.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div `\r\n    position: relative;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    height: 55px;\r\n    background: var(--medGrey);\r\n    margin: 0 auto;\r\n    border-radius: 40px;\r\n    color: var(--white);\r\n\r\n    img{\r\n        position: absolute;\r\n        left:15px;\r\n        top:14px;\r\n        width: 30px;\r\n    }\r\n\r\n    input{\r\n        font-size: var(--fontBig);\r\n        position: absolute;\r\n        left: 0;\r\n        margin: 8px 0;\r\n        padding: 0 0 0 60px;\r\n        border: 0;\r\n        width: 95%;\r\n        background: transparent;\r\n        height: 40px;\r\n        color: var(--white);\r\n        :focus{\r\n            outline: none;\r\n        }\r\n        @media screen and (max-width: 720px){\r\n        font-size: 16px\r\n        }\r\n    }\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n//image\r\nimport SearchIcon from '../../images/search-icon.svg';\r\n//styles\r\nimport { Wrapper, Content } from \"./SearchBar.styles\";\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n    const [ state, setState ] = useState('');\r\n    const initial = useRef(true);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if(initial.current){\r\n            initial.current = false\r\n            return\r\n        }\r\n        const timer = setTimeout(() =>{\r\n            setSearchTerm(state);\r\n        }, 500)\r\n\r\n        return () => clearTimeout(timer)\r\n    }, [setSearchTerm, state])\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={SearchIcon} alt='search-icon'/>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder='Search movie'\r\n                    onChange={event =>{setState(event.currentTarget.value)}}\r\n                    value={state}\r\n                />\r\n            </Content>\r\n        </Wrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBar","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button `\r\n    display: block;\r\n    background: var(--darkGrey);\r\n    width: 25%;\r\n    min-width: 200px;\r\n    height: 60px;\r\n    border-radius: 30px;\r\n    color: var(--white);\r\n    border: 0;\r\n    font-size: var(--fontBig);\r\n    margin: 20px auto;\r\n    transition: all 0.3s;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    :hover{\r\n        opacity: 0.8\r\n    }\r\n\r\n`;","import React from 'react';\r\n\r\n//styles\r\nimport { Wrapper } from './Button.styles';\r\n\r\nconst Button = ({ text, callback }) => (\r\n    <Wrapper type=\"button\" onClick={callback}>\r\n        {text}\r\n    </Wrapper>\r\n)\r\n\r\nexport default Button;","import {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL\r\n} from './config';\r\n\r\nconst defaultConfig = {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst apiSettings = {\r\n  fetchMovies: async (searchTerm, page) => {\r\n    const endpoint = searchTerm\r\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\r\n      : `${POPULAR_BASE_URL}&page=${page}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchMovie: async movieId => {\r\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchCredits: async movieId => {\r\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n    return await (await fetch(creditsEndpoint)).json();\r\n  },\r\n  // Bonus material below for login\r\n  getRequestToken: async () => {\r\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\r\n    return reqToken.request_token;\r\n  },\r\n  authenticate: async (requestToken, username, password) => {\r\n    const bodyData = {\r\n      username,\r\n      password,\r\n      request_token: requestToken\r\n    };\r\n    // First authenticate the requestToken\r\n    const data = await (\r\n      await fetch(LOGIN_URL, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify(bodyData)\r\n      })\r\n    ).json();\r\n    // Then get the sessionId with the requestToken\r\n    if (data.success) {\r\n      const sessionId = await (\r\n        await fetch(SESSION_ID_URL, {\r\n          ...defaultConfig,\r\n          body: JSON.stringify({ request_token: requestToken })\r\n        })\r\n      ).json();\r\n      return sessionId;\r\n    }\r\n  },\r\n  rateMovie: async (sessionId, movieId, value) => {\r\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\r\n\r\n    const rating = await (\r\n      await fetch(endpoint, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify({ value })\r\n      })\r\n    ).json();\r\n\r\n    return rating;\r\n  }\r\n};\r\n\r\nexport default apiSettings;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n//API\r\nimport API from '../API'\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_pages: 0,\r\n    total_results: 0,\r\n}\r\n\r\nexport const useHomeFetch = () =>{\r\n\r\n    const [ searchTerm, setSearchTerm ] = useState('')\r\n    const [ state, setState ] = useState(initialState);\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [ error, setError ] = useState(false);\r\n    const [ isLoadingMore, setIsLoadingMore ] = useState(false);\r\n\r\n    console.log(state)\r\n\r\n    const fetchMovies = async( page, searchTerm = \"\" )=>{\r\n        try{\r\n            setError(false);\r\n            setLoading(true);\r\n            \r\n            const movies = await API.fetchMovies(searchTerm, page); \r\n\r\n           \r\n            \r\n\r\n            setState(prev => ({\r\n                ...movies, \r\n                results: \r\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n            }))\r\n\r\n        }\r\n        catch(error){\r\n            setError(true);\r\n        }\r\n\r\n        setLoading(false)\r\n    };\r\n     //Search\r\n     useEffect(() => {\r\n        setState(initialState);\r\n        fetchMovies(1, searchTerm)\r\n    }, [searchTerm])\r\n\r\n    //Load More\r\n    useEffect(() =>{\r\n        if(!isLoadingMore) return;\r\n\r\n        fetchMovies(state.page + 1, searchTerm)\r\n        setIsLoadingMore(false);\r\n    }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n    return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore};\r\n\r\n}","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from \"react\";\r\n\r\n\r\n//config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config'\r\n\r\n//components\r\nimport HeroImage from \"./HeroImage\";\r\nimport Grid from \"./Grid\";\r\nimport Thumb from \"./Thumb\"\r\nimport Spinner from './Spinner'\r\nimport SearchBar from \"./SearchBar\";\r\nimport Button from \"./Button\";\r\n\r\n//Hook\r\nimport { useHomeFetch } from '../hooks/useHomeFetch'\r\n\r\n//Image\r\nimport NoImage from '../images/no_image.jpg'\r\n\r\n\r\nconst Home = ( ) => {\r\n\r\n    const { \r\n        state, \r\n        loading, \r\n        error, \r\n        searchTerm, \r\n        setSearchTerm, \r\n        setIsLoadingMore \r\n    } = useHomeFetch()\r\n\r\n\r\n    if(error) return <div>Something went wrong ....</div>\r\n\r\n    return (\r\n        <>  \r\n            {!searchTerm && state.results[0] ? (\r\n                <HeroImage \r\n                    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n                    title={state.results[0].original_title}\r\n                    text={state.results[0].overview}\r\n                />\r\n            ) : null}  \r\n            <SearchBar setSearchTerm={setSearchTerm} />\r\n            <Grid header={ searchTerm ? 'Search Results': 'Popular Movies'}>\r\n                {state.results.map(movie => (\r\n                    \r\n                    <Thumb\r\n                        key={movie.id}\r\n                        clickable\r\n                        image={\r\n                            movie.poster_path\r\n                            ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                            : NoImage\r\n                        }\r\n                        movieId={movie.id}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n            {loading && \r\n                <Spinner />\r\n            }\r\n            {state.page < state.total_pages && !loading && ( \r\n                <Button text='Load More' callback={() => setIsLoadingMore(true)}/>\r\n            )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle `\r\n    :root{\r\n        --maxWidth: 1280px;\r\n        --white: #fff;\r\n        --lightGrey: #eee;\r\n        --medGrey: #353535;\r\n        --darkGrey: #1c1c1c;\r\n        --fontSuperBig: 2.5rem;\r\n        --fontBig: 1.5rem;\r\n        --fontMed: 1.2rem;\r\n        --fontSmall: 1rem;\r\n    }       \r\n    *{\r\n        box-sizing: border-box:\r\n        font-family: 'Abel', sans-serif;\r\n    }\r\n    body{\r\n        margin: 0;\r\n        padding: 0;\r\n        \r\n        h1{\r\n            font-size: 2rem;\r\n            font-weight: 600;\r\n            color: var(--white)\r\n        }\r\n        h3{\r\n            font-size: 1.1rem;\r\n            font-weight: 600;\r\n\r\n        }\r\n        p{\r\n            font-size: 1rem;\r\n            color: var(--white)\r\n        }\r\n\r\n    }\r\n    \r\n`","import React from 'react';\r\n\r\n//components\r\nimport Header from './components/Header';\r\nimport Home from './components/Home'\r\n\r\n//styles\r\nimport { GlobalStyle } from './GlobalStyles';\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header>\r\n\r\n      </Header>\r\n      <Home />\r\n      <GlobalStyle />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}