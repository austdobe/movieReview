{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.style.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","helpers.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyles.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","SearchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","console","log","API","movies","prev","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","useParams","credits","crew","filter","members","job","actors","cast","useMovieFetch","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2df94218.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.35f4d399.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.e7029961.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div `\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: var(--maxWidth)\r\n    padding: 20px 0;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img `\r\n    width: 200px;\r\n\r\n    @media screen and (max-width: 500px){\r\n        width: 150px;\r\n    }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img `\r\n    width: 100px;\r\n    @media screen and (max-width: 500px){\r\n        width: 80px;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\n//logos\r\nimport RMDBLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo  from '../../images/tmdb_logo.svg';\r\n//style\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './header.styles';\r\n\r\nconst Header = () =>(\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n                <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\r\n            </Link>\r\n            <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo'/>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Header;","// Configuration for TMDB API\r\n// Read more about the API here: https://developers.themoviedb.org/\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\r\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\r\n// For login and voting\r\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\r\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\r\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\r\n\r\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\r\n// Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w780';\r\n\r\nexport {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div `\r\n    background: linear-gradient(\r\n        to bottom, rgba(0, 0, 0, 0)\r\n        41%, rgba( 0, 0, 0, 0.65)\r\n        100%\r\n    ), \r\n    url(${({image}) => image}), var(--darkGrey);\r\n    Background-size: 100%, cover;\r\n    background-position: center;\r\n    height: 600px;\r\n    position: relative;\r\n    animation: animateHeroImage 1s'\r\n\r\n    @keyframes animateHeroImage{\r\n        from{\r\n            opacity: 0;\r\n        } to{\r\n            opacity: 1\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div `\r\n    padding: 20px;\r\n    max-width: var(--maxWidth)\r\n    margin: 0 auto;\r\n\r\n`;\r\n\r\nexport const Text = styled.div `\r\n    z-index: 100;\r\n    max-width: 700px;\r\n    position: absolute;\r\n    bottom: 40px;\r\n    margin-right: 20px;\r\n    min-height: 100px;\r\n    color: var(--white);\r\n    h1{\r\n        font-size: var(--fontSuperBig);\r\n\r\n        @media screen and (max-width: 720px){\r\n            font-size: var(--fontBig)\r\n\r\n        }\r\n    \r\n    }\r\n    p{\r\n        font-size: var(--fontMed)\r\n\r\n        @media screen and (max-width: 720px){\r\n            font-size: var(--fontSmall)\r\n        }\r\n    }\r\n    @media screen and (max-width: 720px){\r\n        max-width: 100%\r\n    }\r\n\r\n`;","import React from \"react\";\r\n//style\r\nimport { Wrapper, Content, Text } from \"./HeroImage.style\";\r\n\r\nconst HeroImage = ({ image, title, text }) =>(\r\n    <Wrapper image={image}>\r\n        <Content>\r\n            <Text>\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n)\r\n\r\nexport default HeroImage;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div `\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n\r\n    h1{\r\n        color: var(--medGrey);\r\n        \r\n        @media screen and (max-width: 768px){\r\n            font-size: var(--fontBig)\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div `\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    grid-gap: 2rem;\r\n`; ","import React from 'react';\r\n//style\r\nimport { Wrapper, Content } from './Grid.styles';\r\n\r\nconst Grid = ({ header, children }) => (\r\n\r\n    <Wrapper>\r\n        <h1>{header}</h1>\r\n        <Content>{children}</Content>\r\n    </Wrapper>\r\n\r\n)\r\n\r\nexport default Grid;","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img `\r\n    width: 100%;\r\n    max-width: 720px;\r\n    transition: all 0.3s;\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n    animation: animateThumb 0.5s;\r\n\r\n    :hover{\r\n        opacity: .8;\r\n    }\r\n\r\n    @keyframes animateThumb {\r\n        from{\r\n            opacity: 0;\r\n\r\n        }\r\n        to{\r\n            opacity: 1;\r\n\r\n        }\r\n    }\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n//styles\r\nimport { Image } from './Thumb.styles';\r\n\r\nconst Thumb = ({ image, movieId, clickable })=>(\r\n    <div>\r\n        {clickable ? (\r\n            <Link to={`/${movieId}`}>\r\n                <Image src={image} alt='movie-thumb'/>\r\n            </Link>\r\n        ):(\r\n            <Image src={image} alt='movie-thumb'/>\r\n        )}\r\n        \r\n    </div>\r\n)\r\n\r\nexport default Thumb","import React from 'react'\r\n//style\r\nimport { Spinner } from './Spinner.styles'\r\n\r\nexport default Spinner","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div `\r\n    border: 5px solid var(--lightGrey);\r\n    border-top: 5px solid var(--medGrey);\r\n    border-radius: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n    animation: spin 0.8s linear infinite;\r\n    margin: 20px auto;\r\n\r\n    @keyframes spin {\r\n        0%{\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/search-icon.bb4c697f.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div `\r\n    position: relative;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    height: 55px;\r\n    background: var(--medGrey);\r\n    margin: 0 auto;\r\n    border-radius: 40px;\r\n    color: var(--white);\r\n\r\n    img{\r\n        position: absolute;\r\n        left:15px;\r\n        top:14px;\r\n        width: 30px;\r\n    }\r\n\r\n    input{\r\n        font-size: var(--fontBig);\r\n        position: absolute;\r\n        left: 0;\r\n        margin: 8px 0;\r\n        padding: 0 0 0 60px;\r\n        border: 0;\r\n        width: 95%;\r\n        background: transparent;\r\n        height: 40px;\r\n        color: var(--white);\r\n        :focus{\r\n            outline: none;\r\n        }\r\n        @media screen and (max-width: 720px){\r\n        font-size: 16px\r\n        }\r\n    }\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n//image\r\nimport SearchIcon from '../../images/search-icon.svg';\r\n//styles\r\nimport { Wrapper, Content } from \"./SearchBar.styles\";\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n    const [ state, setState ] = useState('');\r\n    const initial = useRef(true);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if(initial.current){\r\n            initial.current = false\r\n            return\r\n        }\r\n        const timer = setTimeout(() =>{\r\n            setSearchTerm(state);\r\n        }, 500)\r\n\r\n        return () => clearTimeout(timer)\r\n    }, [setSearchTerm, state])\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={SearchIcon} alt='search-icon'/>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder='Search movie'\r\n                    onChange={event =>{setState(event.currentTarget.value)}}\r\n                    value={state}\r\n                />\r\n            </Content>\r\n        </Wrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBar","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button `\r\n    display: block;\r\n    background: var(--darkGrey);\r\n    width: 25%;\r\n    min-width: 200px;\r\n    height: 60px;\r\n    border-radius: 30px;\r\n    color: var(--white);\r\n    border: 0;\r\n    font-size: var(--fontBig);\r\n    margin: 20px auto;\r\n    transition: all 0.3s;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    :hover{\r\n        opacity: 0.8\r\n    }\r\n\r\n`;","import React from 'react';\r\n\r\n//styles\r\nimport { Wrapper } from './Button.styles';\r\n\r\nconst Button = ({ text, callback }) => (\r\n    <Wrapper type=\"button\" onClick={callback}>\r\n        {text}\r\n    </Wrapper>\r\n)\r\n\r\nexport default Button;","import {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL\r\n} from './config';\r\n\r\nconst defaultConfig = {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst apiSettings = {\r\n  fetchMovies: async (searchTerm, page) => {\r\n    const endpoint = searchTerm\r\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\r\n      : `${POPULAR_BASE_URL}&page=${page}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchMovie: async movieId => {\r\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchCredits: async movieId => {\r\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n    return await (await fetch(creditsEndpoint)).json();\r\n  },\r\n  // Bonus material below for login\r\n  getRequestToken: async () => {\r\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\r\n    return reqToken.request_token;\r\n  },\r\n  authenticate: async (requestToken, username, password) => {\r\n    const bodyData = {\r\n      username,\r\n      password,\r\n      request_token: requestToken\r\n    };\r\n    // First authenticate the requestToken\r\n    const data = await (\r\n      await fetch(LOGIN_URL, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify(bodyData)\r\n      })\r\n    ).json();\r\n    // Then get the sessionId with the requestToken\r\n    if (data.success) {\r\n      const sessionId = await (\r\n        await fetch(SESSION_ID_URL, {\r\n          ...defaultConfig,\r\n          body: JSON.stringify({ request_token: requestToken })\r\n        })\r\n      ).json();\r\n      return sessionId;\r\n    }\r\n  },\r\n  rateMovie: async (sessionId, movieId, value) => {\r\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\r\n\r\n    const rating = await (\r\n      await fetch(endpoint, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify({ value })\r\n      })\r\n    ).json();\r\n\r\n    return rating;\r\n  }\r\n};\r\n\r\nexport default apiSettings;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n//API\r\nimport API from '../API'\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_pages: 0,\r\n    total_results: 0,\r\n}\r\n\r\nexport const useHomeFetch = () =>{\r\n\r\n    const [ searchTerm, setSearchTerm ] = useState('')\r\n    const [ state, setState ] = useState(initialState);\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [ error, setError ] = useState(false);\r\n    const [ isLoadingMore, setIsLoadingMore ] = useState(false);\r\n\r\n    console.log(state)\r\n\r\n    const fetchMovies = async( page, searchTerm = \"\" )=>{\r\n        try{\r\n            setError(false);\r\n            setLoading(true);\r\n            \r\n            const movies = await API.fetchMovies(searchTerm, page); \r\n\r\n           \r\n            \r\n\r\n            setState(prev => ({\r\n                ...movies, \r\n                results: \r\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n            }))\r\n\r\n        }\r\n        catch(error){\r\n            setError(true);\r\n        }\r\n\r\n        setLoading(false)\r\n    };\r\n     //Search\r\n     useEffect(() => {\r\n        setState(initialState);\r\n        fetchMovies(1, searchTerm)\r\n    }, [searchTerm])\r\n\r\n    //Load More\r\n    useEffect(() =>{\r\n        if(!isLoadingMore) return;\r\n\r\n        fetchMovies(state.page + 1, searchTerm)\r\n        setIsLoadingMore(false);\r\n    }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n    return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore};\r\n\r\n}","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from \"react\";\r\n\r\n\r\n//config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config'\r\n\r\n//components\r\nimport HeroImage from \"./HeroImage\";\r\nimport Grid from \"./Grid\";\r\nimport Thumb from \"./Thumb\"\r\nimport Spinner from './Spinner'\r\nimport SearchBar from \"./SearchBar\";\r\nimport Button from \"./Button\";\r\n\r\n//Hook\r\nimport { useHomeFetch } from '../hooks/useHomeFetch'\r\n\r\n//Image\r\nimport NoImage from '../images/no_image.jpg'\r\n\r\n\r\nconst Home = ( ) => {\r\n\r\n    const { \r\n        state, \r\n        loading, \r\n        error, \r\n        searchTerm, \r\n        setSearchTerm, \r\n        setIsLoadingMore \r\n    } = useHomeFetch()\r\n\r\n\r\n    if(error) return <div>Something went wrong ....</div>\r\n\r\n    return (\r\n        <>  \r\n            {!searchTerm && state.results[0] ? (\r\n                <HeroImage \r\n                    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n                    title={state.results[0].original_title}\r\n                    text={state.results[0].overview}\r\n                />\r\n            ) : null}  \r\n            <SearchBar setSearchTerm={setSearchTerm} />\r\n            <Grid header={ searchTerm ? 'Search Results': 'Popular Movies'}>\r\n                {state.results.map(movie => (\r\n                    \r\n                    <Thumb\r\n                        key={movie.id}\r\n                        clickable\r\n                        image={\r\n                            movie.poster_path\r\n                            ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                            : NoImage\r\n                        }\r\n                        movieId={movie.id}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n            {loading && \r\n                <Spinner />\r\n            }\r\n            {state.page < state.total_pages && !loading && ( \r\n                <Button text='Load More' callback={() => setIsLoadingMore(true)}/>\r\n            )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 70px;\r\n    background: var(--medGrey);\r\n    color: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div ` \r\n    display: flex;\r\n    width: 100%;\r\n    max-width: var(--maxWidth);\r\n    padding: 0 20px;\r\n    span{\r\n        font-size: var(--fontMed);\r\n        color: var(--white);\r\n        padding-right: 10px;\r\n\r\n        @media screen and (max-width: 768px){\r\n            font-size: var(--fontSmall);\r\n        }\r\n    }\r\n    \r\n`\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// style\r\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\r\n\r\nconst BreadCrumb = ({ movieTitle }) =>(\r\n<Wrapper>\r\n    <Content>\r\n        <Link to='/'>\r\n            <span>Home</span>\r\n        </Link>\r\n        <span> | </span>\r\n        <span>{movieTitle}</span>\r\n    </Content>\r\n</Wrapper>\r\n\r\n)\r\n\r\nexport default BreadCrumb","import styled from \"styled-components\";\r\n\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\r\n\r\nexport const Wrapper = styled.div ` \r\n    background: ${({ backdrop })=>\r\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})`\r\n    : '#000'};\r\n    background-size: cover;\r\n    background-position: center;\r\n    animation: animateMovieInfo 1s;\r\n\r\n    @keyframes animateMovieInfo{\r\n        from{\r\n            opacity: 0\r\n        } to{\r\n            opacity: 1\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const Content = styled.div ` \r\n    display: flex;\r\n    max-width: var(--maxWidth);\r\n    margin:  0 auto;\r\n    background: rgba( 0 , 0 , 0 , 0.7 );\r\n    border-radius: 20px;\r\n\r\n    @media screen and ( max-width: 768px){\r\n        display: block;\r\n        max-height: none;\r\n    }\r\n`;\r\n\r\nexport const Text = styled.div ` \r\n    width: 100%;\r\n    padding: 20px 40px;\r\n    color: var(--white);\r\n    overflow: hidden;\r\n\r\n    .rating-directors{\r\n        display: flex;\r\n        justify-content: flex-start;\r\n\r\n    }\r\n    .score{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 35px;\r\n        height: 35px;\r\n        background: #fff;\r\n        color: #000;\r\n        font-weight: 800;\r\n        border-radius: 50%;\r\n        margin: 0;\r\n    }\r\n    .director{\r\n        margin: 0 0 0 40px;\r\n\r\n        p{\r\n            margin: 0;\r\n        }\r\n    }\r\n    h1{\r\n        @media screen and ( max-width: 768px ){\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\n\r\n//components\r\nimport Thumb from '../Thumb';\r\n//config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n//image\r\nimport NoImage from '../../images/no_image.jpg';\r\n//styles\r\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n    <Wrapper backdrop={movie.backdrop_path}>\r\n        <Content>\r\n            <Thumb\r\n                image= {\r\n                    movie.poster_path\r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                    : NoImage\r\n                }\r\n                clickable = {false}\r\n                alt='movie-thumb'\r\n            />\r\n            <Text>\r\n                <h1> {movie.title} </h1>\r\n                <h3> Plot </h3>\r\n                <p>{movie.overview}</p>\r\n\r\n                <div className=\"rating-directors\">\r\n                    <div>\r\n                        <h3>Rating</h3>\r\n                        <div className='score'>{movie.vote_average}</div>\r\n                    </div>\r\n                    <div className='director'>\r\n                        <h3>Director{ movie.directors.length > 1 ? 's' : ''}</h3>\r\n                        {movie.directors.map(director => (\r\n                            <p key= {director.credit_id}>{director.name}</p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n            </Text>\r\n\r\n        </Content>\r\n    </Wrapper>\r\n\r\n)\r\n\r\nexport default MovieInfo","// Convert time to hours and minutes\r\nexport const calcTime = time => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n// Convert a number to money formatting\r\nexport const convertMoney = money => {\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format(money);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    min-height: 100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div `\r\n    display: flex;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    margin: 0 auto;\r\n\r\n    .column{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: var(--medGrey);\r\n        border-radius: 20px;\r\n        margin: 0 20px;\r\n        flex: 1;\r\n\r\n        :first-child{\r\n            margin-left: 0;\r\n        }\r\n        :last-child{\r\n            margin-right: 0;\r\n        }\r\n        \r\n    }\r\n    @media screen and (max-width: 768px){\r\n        display: block;\r\n        \r\n        .column{\r\n            margin: 20px 0;\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\n//helpers\r\nimport { calcTime, convertMoney } from '../../helpers';\r\n//style\r\nimport { Wrapper, Content } from './MovieInfoBar.styles';\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) =>(\r\n    <Wrapper>\r\n        <Content>\r\n            <div className='column'>\r\n                <p>Running Time: {calcTime(time)}</p>\r\n            </div>\r\n            <div className='column'>\r\n                <p>Budget: {budget > 0 ? `${convertMoney(budget)}` : 'Unavailable'}</p>\r\n            </div>\r\n            <div className='column'>\r\n                <p>Revenue: {revenue > 0 ? `${convertMoney(revenue)}` : 'Unavailable'}</p>\r\n            </div>\r\n        </Content>\r\n    </Wrapper>\r\n\r\n);\r\n\r\nexport default MovieInfoBar","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div ` \r\n    color: var(--white);\r\n    background: var(--darkGrey);\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n    text-align: center;\r\n\r\n    h3{\r\n        margin: 10px 0 0 0;\r\n    }\r\n\r\n    p{\r\n        margin: 5px 0;\r\n    }\r\n`;\r\n\r\nexport const Image = styled.img ` \r\n    display: block;\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius: 15px;\r\n`;","import React from 'react';\r\n//style\r\nimport { Wrapper, Image } from './Actor.styles';\r\n\r\nconst Actor = ({ name, character, imageUrl }) => (\r\n    <Wrapper>\r\n        <Image src={imageUrl}/>\r\n        <h3>{name}</h3>\r\n        <p>{character}</p>\r\n    </Wrapper>\r\n\r\n\r\n);\r\n\r\nexport default Actor","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n//config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n\r\n//components\r\nimport BreadCrumb from './BreadCrumb'\r\nimport Grid from './Grid';\r\nimport Spinner from './Spinner';\r\nimport MovieInfo from './MovieInfo';\r\nimport MovieInfoBar from './MovieInfoBar';\r\nimport Actor from './Actor'\r\n\r\n//hooks\r\nimport { useMovieFetch } from '../hooks/useMovieFetch';\r\n\r\n//images\r\nimport NoImage from '../images/no_image.jpg'\r\n\r\nconst Movie = () =>{\r\n    const { movieId } = useParams()\r\n    const { state: movie, loading, error } = useMovieFetch(movieId)\r\n\r\n\r\n    if(loading) return <Spinner />\r\n    if(error) return <div>Opps... something went wrong</div>\r\n\r\n    console.log(movieId)\r\n    return(\r\n        <>\r\n            <BreadCrumb movieTitle = {movie.original_title} />\r\n            <MovieInfo movie={movie} />\r\n            <MovieInfoBar \r\n                time={movie.runtime}\r\n                budget={movie.budget}\r\n                revenue={movie.revenue}\r\n            />\r\n            <Grid header='Actors'>\r\n                {movie.actors.map(actor=>(\r\n                    <Actor\r\n                        key={actor.credit_id}\r\n                        name={actor.name}\r\n                        character={actor.character}\r\n                        imageUrl={actor.profile_path\r\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                        : NoImage\r\n                    }\r\n                    />\r\n                ))}\r\n            </Grid>\r\n            \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Movie","import { useState, useEffect } from \"react\";\r\nimport API from '../API'\r\n\r\nexport const useMovieFetch = movieId =>{\r\n    const [state, setState] = useState({});\r\n    const [loading, setLoading] = useState({});\r\n    const [error, setError] = useState({});\r\n\r\n    useEffect(() =>{\r\n        const fetchMovie = async () =>{\r\n            try{\r\n                setLoading(true);\r\n                setError(false);\r\n\r\n                const movie = await API.fetchMovie(movieId);\r\n                const credits = await API.fetchCredits(movieId);\r\n                //get directors only\r\n                const directors = credits.crew.filter(\r\n                    members =>members.job ===\"Director\"\r\n                );\r\n\r\n                setState({\r\n                    ...movie, \r\n                    actors: credits.cast,\r\n                    directors\r\n                });\r\n\r\n                setLoading(false)\r\n\r\n            } catch(error){\r\n                setError(true);\r\n            }\r\n            \r\n        }\r\n\r\n        fetchMovie();\r\n\r\n    }, [movieId])\r\n\r\n    return { state, loading, error }\r\n\r\n}","import React from 'react';\r\n\r\nconst NotFound = () =>(\r\n    <div>Opps.... This page is not found!</div>\r\n    \r\n\r\n)\r\n\r\nexport default NotFound","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle `\r\n    :root{\r\n        --maxWidth: 1280px;\r\n        --white: #fff;\r\n        --lightGrey: #eee;\r\n        --medGrey: #353535;\r\n        --darkGrey: #1c1c1c;\r\n        --fontSuperBig: 2.5rem;\r\n        --fontBig: 1.5rem;\r\n        --fontMed: 1.2rem;\r\n        --fontSmall: 1rem;\r\n    }       \r\n    *{\r\n        box-sizing: border-box:\r\n        font-family: 'Abel', sans-serif;\r\n    }\r\n    body{\r\n        margin: 0;\r\n        padding: 0;\r\n        \r\n        h1{\r\n            font-size: 2rem;\r\n            font-weight: 600;\r\n            color: var(--white)\r\n        }\r\n        h3{\r\n            font-size: 1.1rem;\r\n            font-weight: 600;\r\n\r\n        }\r\n        p{\r\n            font-size: 1rem;\r\n            color: var(--white)\r\n        }\r\n\r\n    }\r\n    \r\n`","import React from 'react';\r\n//routing\r\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom'\r\n\r\n//components\r\nimport Header from './components/Header';\r\nimport Home from './components/Home';\r\nimport Movie from './components/Movie';\r\nimport NotFound from './components/NotFound';\r\n\r\n//styles\r\nimport { GlobalStyle } from './GlobalStyles';\r\n\r\nconst App = () => (\r\n    <Router>\r\n      <Header />\r\n      <Routes>\r\n        <Route path='/' element={<Home />} />\r\n        <Route path='/:movieId' element={<Movie />} />\r\n        <Route path='/*' element={<NotFound />} />\r\n      </Routes>\r\n      <GlobalStyle />\r\n    </Router>\r\n  );\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}